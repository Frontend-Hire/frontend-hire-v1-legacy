
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."bug_files" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "file_name" "text" NOT NULL,
    "code" "text" NOT NULL,
    "bug_id" bigint NOT NULL
);

ALTER TABLE "public"."bug_files" OWNER TO "postgres";

ALTER TABLE "public"."bug_files" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."bug_files_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."bug_submissions" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "question_id" "text" NOT NULL,
    "user_id" "uuid" DEFAULT "auth"."uid"(),
    "description" "text" NOT NULL,
    "sandbox_link" "text",
    "is_fixed" boolean DEFAULT false NOT NULL
);

ALTER TABLE "public"."bug_submissions" OWNER TO "postgres";

ALTER TABLE "public"."bug_submissions" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."bugs_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."code_history" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "question_id" "text" NOT NULL,
    "user_id" "uuid" DEFAULT "auth"."uid"() NOT NULL
);

ALTER TABLE "public"."code_history" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."code_history_files" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "code" "text" NOT NULL,
    "file_name" "text" NOT NULL,
    "code_history_id" bigint NOT NULL
);

ALTER TABLE "public"."code_history_files" OWNER TO "postgres";

ALTER TABLE "public"."code_history_files" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."code_history_files_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."code_history" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."code_history_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."code_submission_files" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "code" "text" NOT NULL,
    "file_name" "text" NOT NULL,
    "code_submission_id" bigint NOT NULL
);

ALTER TABLE "public"."code_submission_files" OWNER TO "postgres";

ALTER TABLE "public"."code_submission_files" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."code_submission_files_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."code_submissions" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "question_id" "text" NOT NULL,
    "user_id" "uuid" DEFAULT "auth"."uid"() NOT NULL
);

ALTER TABLE "public"."code_submissions" OWNER TO "postgres";

ALTER TABLE "public"."code_submissions" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."code_submissions_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."project_bug_submissions" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "project_id" "text" NOT NULL,
    "user_id" "uuid" DEFAULT "auth"."uid"(),
    "description" "text" NOT NULL,
    "is_fixed" boolean DEFAULT false NOT NULL
);

ALTER TABLE "public"."project_bug_submissions" OWNER TO "postgres";

ALTER TABLE "public"."project_bug_submissions" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."project_bug_submissions_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."project_submissions" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "completed_tasks" smallint[],
    "user_id" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "project_id" "text" NOT NULL,
    "live_link" "text" DEFAULT ''::"text" NOT NULL,
    "github_link" "text" DEFAULT ''::"text" NOT NULL
);

ALTER TABLE "public"."project_submissions" OWNER TO "postgres";

ALTER TABLE "public"."project_submissions" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."project_submissions_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."bug_files"
    ADD CONSTRAINT "bug_files_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."bug_files"
    ADD CONSTRAINT "bug_files_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."bug_submissions"
    ADD CONSTRAINT "bug_submissions_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."bug_submissions"
    ADD CONSTRAINT "bugs_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."code_history_files"
    ADD CONSTRAINT "code_history_files_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."code_history_files"
    ADD CONSTRAINT "code_history_files_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."code_history"
    ADD CONSTRAINT "code_history_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."code_history"
    ADD CONSTRAINT "code_history_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."code_submissions"
    ADD CONSTRAINT "code_submissions_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."code_submissions"
    ADD CONSTRAINT "code_submissions_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."code_submission_files"
    ADD CONSTRAINT "files_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."code_submission_files"
    ADD CONSTRAINT "files_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."project_bug_submissions"
    ADD CONSTRAINT "project_bug_submissions_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."project_bug_submissions"
    ADD CONSTRAINT "project_bug_submissions_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."project_submissions"
    ADD CONSTRAINT "project_submissions_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."bug_files"
    ADD CONSTRAINT "bug_files_bug_id_fkey" FOREIGN KEY ("bug_id") REFERENCES "public"."bug_submissions"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."bug_submissions"
    ADD CONSTRAINT "bug_submissions_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."code_history_files"
    ADD CONSTRAINT "code_history_files_code_history_id_fkey" FOREIGN KEY ("code_history_id") REFERENCES "public"."code_history"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."code_history"
    ADD CONSTRAINT "code_history_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."code_submission_files"
    ADD CONSTRAINT "code_submission_files_code_submission_id_fkey" FOREIGN KEY ("code_submission_id") REFERENCES "public"."code_submissions"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."code_submissions"
    ADD CONSTRAINT "code_submissions_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."project_bug_submissions"
    ADD CONSTRAINT "project_bug_submissions_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."project_submissions"
    ADD CONSTRAINT "project_submissions_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;

CREATE POLICY "Let authenticated user do all actions" ON "public"."code_history" TO "authenticated" USING (("auth"."uid"() = "user_id")) WITH CHECK (("auth"."uid"() = "user_id"));

CREATE POLICY "Let authenticated user do all actions" ON "public"."code_history_files" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Let authenticated user do all actions" ON "public"."project_submissions" TO "authenticated" USING (("auth"."uid"() = "user_id")) WITH CHECK (("auth"."uid"() = "user_id"));

CREATE POLICY "Let authenticated user submit bugs" ON "public"."project_bug_submissions" FOR INSERT TO "authenticated" WITH CHECK (("auth"."uid"() = "user_id"));

CREATE POLICY "Let authenticated users insert bugs" ON "public"."bug_submissions" FOR INSERT TO "authenticated" WITH CHECK (("auth"."uid"() = "user_id"));

CREATE POLICY "Let authenticated users submit the files related to the bug" ON "public"."bug_files" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Let user do all actions on code_submissions" ON "public"."code_submissions" TO "authenticated" USING (("auth"."uid"() = "user_id")) WITH CHECK (("auth"."uid"() = "user_id"));

CREATE POLICY "Let user do all actions on files" ON "public"."code_submission_files" TO "authenticated" USING (true) WITH CHECK (true);

ALTER TABLE "public"."bug_files" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."bug_submissions" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."code_history" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."code_history_files" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."code_submission_files" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."code_submissions" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."project_bug_submissions" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."project_submissions" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."bug_files" TO "anon";
GRANT ALL ON TABLE "public"."bug_files" TO "authenticated";
GRANT ALL ON TABLE "public"."bug_files" TO "service_role";

GRANT ALL ON SEQUENCE "public"."bug_files_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."bug_files_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."bug_files_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."bug_submissions" TO "anon";
GRANT ALL ON TABLE "public"."bug_submissions" TO "authenticated";
GRANT ALL ON TABLE "public"."bug_submissions" TO "service_role";

GRANT ALL ON SEQUENCE "public"."bugs_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."bugs_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."bugs_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."code_history" TO "anon";
GRANT ALL ON TABLE "public"."code_history" TO "authenticated";
GRANT ALL ON TABLE "public"."code_history" TO "service_role";

GRANT ALL ON TABLE "public"."code_history_files" TO "anon";
GRANT ALL ON TABLE "public"."code_history_files" TO "authenticated";
GRANT ALL ON TABLE "public"."code_history_files" TO "service_role";

GRANT ALL ON SEQUENCE "public"."code_history_files_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."code_history_files_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."code_history_files_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."code_history_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."code_history_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."code_history_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."code_submission_files" TO "anon";
GRANT ALL ON TABLE "public"."code_submission_files" TO "authenticated";
GRANT ALL ON TABLE "public"."code_submission_files" TO "service_role";

GRANT ALL ON SEQUENCE "public"."code_submission_files_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."code_submission_files_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."code_submission_files_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."code_submissions" TO "anon";
GRANT ALL ON TABLE "public"."code_submissions" TO "authenticated";
GRANT ALL ON TABLE "public"."code_submissions" TO "service_role";

GRANT ALL ON SEQUENCE "public"."code_submissions_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."code_submissions_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."code_submissions_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."project_bug_submissions" TO "anon";
GRANT ALL ON TABLE "public"."project_bug_submissions" TO "authenticated";
GRANT ALL ON TABLE "public"."project_bug_submissions" TO "service_role";

GRANT ALL ON SEQUENCE "public"."project_bug_submissions_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."project_bug_submissions_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."project_bug_submissions_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."project_submissions" TO "anon";
GRANT ALL ON TABLE "public"."project_submissions" TO "authenticated";
GRANT ALL ON TABLE "public"."project_submissions" TO "service_role";

GRANT ALL ON SEQUENCE "public"."project_submissions_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."project_submissions_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."project_submissions_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
