create table "public"."lemonsqueezy_orders" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid not null,
    "order_id" text not null,
    "amount" numeric not null,
    "currency" character varying not null
);


alter table "public"."lemonsqueezy_orders" enable row level security;

create table "public"."razorpay_orders" (
    "id" bigint generated by default as identity not null,
    "order_id" text not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid not null default auth.uid(),
    "amount" numeric not null,
    "currency" character varying not null
);


alter table "public"."razorpay_orders" enable row level security;

CREATE UNIQUE INDEX lemonsqueezy_orders_id_key ON public.lemonsqueezy_orders USING btree (id);

CREATE UNIQUE INDEX lemonsqueezy_orders_order_id_key ON public.lemonsqueezy_orders USING btree (order_id);

CREATE UNIQUE INDEX lemonsqueezy_orders_pkey ON public.lemonsqueezy_orders USING btree (id);

CREATE UNIQUE INDEX razorpay_orders_id_key ON public.razorpay_orders USING btree (id);

CREATE UNIQUE INDEX razorpay_orders_order_id_key ON public.razorpay_orders USING btree (order_id);

CREATE UNIQUE INDEX razorpay_orders_pkey ON public.razorpay_orders USING btree (id);

alter table "public"."lemonsqueezy_orders" add constraint "lemonsqueezy_orders_pkey" PRIMARY KEY using index "lemonsqueezy_orders_pkey";

alter table "public"."razorpay_orders" add constraint "razorpay_orders_pkey" PRIMARY KEY using index "razorpay_orders_pkey";

alter table "public"."lemonsqueezy_orders" add constraint "lemonsqueezy_orders_id_key" UNIQUE using index "lemonsqueezy_orders_id_key";

alter table "public"."lemonsqueezy_orders" add constraint "lemonsqueezy_orders_order_id_key" UNIQUE using index "lemonsqueezy_orders_order_id_key";

alter table "public"."lemonsqueezy_orders" add constraint "lemonsqueezy_orders_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."lemonsqueezy_orders" validate constraint "lemonsqueezy_orders_user_id_fkey";

alter table "public"."razorpay_orders" add constraint "razorpay_orders_id_key" UNIQUE using index "razorpay_orders_id_key";

alter table "public"."razorpay_orders" add constraint "razorpay_orders_order_id_key" UNIQUE using index "razorpay_orders_order_id_key";

alter table "public"."razorpay_orders" add constraint "razorpay_orders_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."razorpay_orders" validate constraint "razorpay_orders_user_id_fkey";

grant delete on table "public"."lemonsqueezy_orders" to "anon";

grant insert on table "public"."lemonsqueezy_orders" to "anon";

grant references on table "public"."lemonsqueezy_orders" to "anon";

grant select on table "public"."lemonsqueezy_orders" to "anon";

grant trigger on table "public"."lemonsqueezy_orders" to "anon";

grant truncate on table "public"."lemonsqueezy_orders" to "anon";

grant update on table "public"."lemonsqueezy_orders" to "anon";

grant delete on table "public"."lemonsqueezy_orders" to "authenticated";

grant insert on table "public"."lemonsqueezy_orders" to "authenticated";

grant references on table "public"."lemonsqueezy_orders" to "authenticated";

grant select on table "public"."lemonsqueezy_orders" to "authenticated";

grant trigger on table "public"."lemonsqueezy_orders" to "authenticated";

grant truncate on table "public"."lemonsqueezy_orders" to "authenticated";

grant update on table "public"."lemonsqueezy_orders" to "authenticated";

grant delete on table "public"."lemonsqueezy_orders" to "service_role";

grant insert on table "public"."lemonsqueezy_orders" to "service_role";

grant references on table "public"."lemonsqueezy_orders" to "service_role";

grant select on table "public"."lemonsqueezy_orders" to "service_role";

grant trigger on table "public"."lemonsqueezy_orders" to "service_role";

grant truncate on table "public"."lemonsqueezy_orders" to "service_role";

grant update on table "public"."lemonsqueezy_orders" to "service_role";

grant delete on table "public"."razorpay_orders" to "anon";

grant insert on table "public"."razorpay_orders" to "anon";

grant references on table "public"."razorpay_orders" to "anon";

grant select on table "public"."razorpay_orders" to "anon";

grant trigger on table "public"."razorpay_orders" to "anon";

grant truncate on table "public"."razorpay_orders" to "anon";

grant update on table "public"."razorpay_orders" to "anon";

grant delete on table "public"."razorpay_orders" to "authenticated";

grant insert on table "public"."razorpay_orders" to "authenticated";

grant references on table "public"."razorpay_orders" to "authenticated";

grant select on table "public"."razorpay_orders" to "authenticated";

grant trigger on table "public"."razorpay_orders" to "authenticated";

grant truncate on table "public"."razorpay_orders" to "authenticated";

grant update on table "public"."razorpay_orders" to "authenticated";

grant delete on table "public"."razorpay_orders" to "service_role";

grant insert on table "public"."razorpay_orders" to "service_role";

grant references on table "public"."razorpay_orders" to "service_role";

grant select on table "public"."razorpay_orders" to "service_role";

grant trigger on table "public"."razorpay_orders" to "service_role";

grant truncate on table "public"."razorpay_orders" to "service_role";

grant update on table "public"."razorpay_orders" to "service_role";

create policy "Authenticated users can create an order"
on "public"."razorpay_orders"
as permissive
for insert
to authenticated
with check ((( SELECT auth.uid() AS uid) = user_id));



